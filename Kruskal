#include<iostream>
using namespace std;
int a,b,k,u,v,n,i,j,ne=1;
int parent[9]={0},minn,mincost=0,cost[9][9];
int find(int);
int uni(int,int);
int main()
{
        cout<<"enter n\n";
        cin>>n;
        cout<<"enter\n";
        for(i=1;i<=n;i++)
                for(j=1;j<=n;j++)
                {
                        cin>>cost[i][j];
                        if(cost[i][j]==0)
                                cost[i][j]=999;
                }
        cout<<"edges are \n";
        while(ne<n)
        {
                for(i=1,minn=999;i<=n;i++)
                {
                        for(j=1;j<=n;j++)
                        {
                                if(cost[i][j]<minn)
                                {
                                        minn=cost[i][j];
                                        a=u=i;
                                        b=v=j;
                                }
                        }
                }
                u=find(u);
                v=find(v);
                if(uni(u,v))
                {
                        cout<<ne++<<" edge (" <<a <<" "<<b<<")  cost : "<<minn<<"\n";
                        mincost+=minn;
                }
                cost[a][b]=cost[b][a]=999;}
        cout<<"\nmincos "<<mincost<<"\n";
}
int find(int i)
{
        while(parent[i])
         i=parent[i];
        return i;
}
int uni(int i,int j)
{
        if(i!=j)
        {
                parent[j]=i;
                return 1;
        }
        return 0;
}
